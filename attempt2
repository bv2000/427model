# Bhamini Brandon and Alex
# 427 - Group Model - Siegel
# Climate Change, Economic Inequality, and Health Outcomes

import math
import numpy as np
from os.path import exists

def addInitialNodes(): 		#Initialize Population

	#lists of agents
    agentList = list()		#List of all people
    suscList = list()		#List of everyone's suscepbilities 
    movedList = list()		#List of people who do move (susc = high, mob = high)
    othersList = list()     #Everyone else


    #initialize internal variables for each run
    moveper=0    			#percent of population with mob=0.7 -- people who can move
    suscper=0     	        #percent of population who are high susc (0.5)
    
	#Create list of individuals
    personcounter=0 		#counter for setting personNum
    #Create lists
    while personcounter<N:
        #Set node properties
        #A node is a list of properties: personcounter, susc, mob, mov, regionAndClimate
        susc=np.random.normal(loc=suscmean, scale=suscstdev) #set susc
        mob = np.random.normal (loc=mobmean, scale=mobstdev) 	#set mob
        if susc>0.8 and mob>0.7: 
            mov=1 #decision is if susc high and mob high, then move 
        elif susc>0.8  and  mob<=0.7:
            mov = 2 # people who want to move but poor
        else: 
            mov = 3 # people who dont want to move
        regionAndClimate = # assign 1/4 to urban/hot, urban/cold, rural/hot, rural/cold (this probably has to be a list [region, climate]) # urbanhot = 0, urbancold =1, ruralhot=2, ruralcold = 3
        #have to divide population into four environments first and then each environment must maintain normal distrib of susc and mob above
        #create node with those properties
        node = [personcounter, susc, mob, mov, regionAndClimate]
        #add to lists
        agentList.append(node)
    ogAgentList=agentList
    return [[agentList,suscList,movedList, ogAgentList]],[moveper, suscper]

#how do i read in file or can i just assign values for the mean and stdev in main code

def modifySusceptibilityBeforeMoveDecision(tempchange, agentList): #limit temp change 0-5 degrees in input file?
    for x in agentList:
        if x[4] == 0:
            x[1] = x[1]*(tempchange/4)
        elif x[4] == 1:
            x[1] = x[1]*(tempchange/2)
        elif x[4] == 2:
            x[1] = x[1]*(tempchange/8)
        elif x[4] == 3:
            x[1] = x[1]*(tempchange/6)
    return agentList  

def moveOrNotMoveAndEffects(agentList, suscList, movedList, othersList, tempchange):
    for x in agentList:
        if x[1]>0.8 and x[2]>0.7:
            mov=1 
        elif x[1]>0.8  and x[2]<=0.7:
            mov = 2 
        else: 
            mov = 3 
        if mov==1: 
            if x[4]== 0:
                x[4]== 2
                x[1] = x[1]*(tempchange/4)
            if x[4]==1:
                x[4]== 0
                x[1] = x[1]*(tempchange/2)
          # nothing happens here bc youre already in best outcome and you dont move and your health only gets slightly worse i
            # if x[4] == 2: 
                # x[4]== 2
                # x[1] = x[1]*(tempchange/)
            if x[4]==3: 
                x[4]== 2
                x[1] = x[1]*(tempchange/2)   
            movedList.append(x)
        if mov==2: 
            suscList.append(x) 
        if mov==3: 
            othersList.append(x)


## dont know how to do main code
[agentList,suscList,movedList, ogAgentList]],[moveper, suscper] = addInitialNodes()
agentlist = modify(____)
[____] = moveOrNotMoveAndEffects
